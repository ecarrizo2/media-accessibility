name: Release on Merge to Main

on:
  push:
    branches:
      - main  # Trigger only on merges to the main branch

jobs:
  release:
    runs-on: ubuntu-latest

    permissions:
      contents: write  # Allow creating releases and tagging

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install dependencies
        run: npm install

      - name: Install Conventional Changelog Angular and Tools
        run: |
          npm install --save-dev conventional-changelog-angular
          npm install --save-dev conventional-recommended-bump
          npm install --save-dev conventional-changelog-cli

      - name: Determine new version
        id: version
        run: |
          # Get the current version from the last Git tag (v1.2.3)
          current_version=$(git describe --tags --abbrev=0 || echo "v0.0.0")

          # Strip the "v" prefix if present
          current_version=${current_version#v}

          # Run the version bump tool with the Angular preset
          bump_type=$(npx conventional-recommended-bump -p conventional-changelog-angular)

          # Use npm's semver tool to calculate the new version based on the bump type
          new_version=$(npx semver "$current_version" -i "$bump_type")

          # Set the new version as an environment variable
          echo "new_version=$new_version" >> $GITHUB_ENV

      - name: Create GitHub release
        id: create_release
        uses: actions/create-release@v1
        with:
          tag_name: "v${{ env.new_version }}"
          release_name: "Release v${{ env.new_version }}"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Generate release notes
        id: generate_notes
        uses: Softonic/github-release-notes@v1.9
        with:
          tag_name: "v${{ env.new_version }}"
          github_token: ${{ secrets.GITHUB_TOKEN }}

      - name: Publish release notes to the created GitHub release
        run: |
          # Use the GitHub API to update the release with the generated notes
          curl -X PATCH -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
               -d "{\"body\": \"${{ steps.generate_notes.outputs.notes }}\"}" \
               https://api.github.com/repos/${{ github.repository }}/releases/${{ steps.create_release.outputs.id }}
