name: Auto-Approve and Merge Dependabot PRs

on:
  pull_request:
    branches:
      - main
  workflow_dispatch:

jobs:
  approve_and_merge:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Check if PR is from Dependabot
        id: check_dependabot
        run: |
          if [[ "${{ github.actor }}" != "dependabot[bot]" ]]; then
            echo "Not a Dependabot PR. Exiting."
            exit 0
          fi

      - name: Check PR Title for Major Version or Dev-Dependency
        id: check_title
        run: |
          PR_TITLE="${{ github.event.pull_request.title }}"
          IS_DEV_DEP=0
          IS_MAJOR=0

          if [[ "$PR_TITLE" == *"(deps-dev)"* ]]; then
            IS_DEV_DEP=1
          fi

          if [[ "$PR_TITLE" =~ bump.*from\ ([0-9]+)\.[0-9]+\.[0-9]+.*to\ ([0-9]+)\.[0-9]+\.[0-9]+ ]]; then
            OLD_VERSION=${BASH_REMATCH[1]}
            NEW_VERSION=${BASH_REMATCH[2]}
            if [[ "$OLD_VERSION" -ne "$NEW_VERSION" ]]; then
              IS_MAJOR=1
            fi
          fi

          echo "is_dev_dep=$IS_DEV_DEP" >> $GITHUB_ENV
          echo "is_major=$IS_MAJOR" >> $GITHUB_ENV

      - name: Approve PR
        if: env.is_dev_dep == '1' || env.is_major == '0'
        uses: actions/github-script@v7
        with:
          script: |
            const prNumber = context.issue.number;
            await github.rest.pulls.createReview({
              owner: context.repo.owner,
              repo: context.repo.repo,
              pull_number: prNumber,
              event: 'APPROVE'
            });

      - name: Determine Merge Strategy
        id: merge_strategy
        if: env.is_dev_dep == '1' || env.is_major == '0'
        run: |
          # Simulating a check for branch protection rules requiring a merge queue
          # Replace this with actual checks if you have a way to determine it
          MERGE_QUEUE_REQUIRED=true

          if $MERGE_QUEUE_REQUIRED; then
            echo "merge_strategy=merge_queue" >> $GITHUB_ENV
          else
            echo "merge_strategy=auto_merge" >> $GITHUB_ENV
          fi

      - name: Add to Merge Queue or Set Auto-Merge
        if: env.is_dev_dep == '1' || env.is_major == '0'
        uses: actions/github-script@v7
        with:
          script: |
            if (process.env.merge_strategy === 'merge_queue') {
              // Replace with actual logic to add to merge queue if applicable
              console.log('Adding PR to merge queue');
            } else {
              const prNumber = context.issue.number;
              await github.rest.pulls.merge({
                owner: context.repo.owner,
                repo: context.repo.repo,
                pull_number: prNumber,
                merge_method: 'merge'
              });
              await github.rest.pulls.updateBranch({
                owner: context.repo.owner,
                repo: context.repo.repo,
                pull_number: prNumber,
                expected_head_sha: context.payload.pull_request.head.sha
              });
            }
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
