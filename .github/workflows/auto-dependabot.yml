name: "Dependabot Auto-Approve and Handle Merge for Minor Bumps"

on:
  pull_request:
    branches:
      - main
  workflow_dispatch:

jobs:
  auto-approve-and-merge-queue:
    runs-on: ubuntu-latest

    permissions:
      pull-requests: write
      contents: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Check Dependabot PR and Approve
        id: check_and_approve
        uses: actions/github-script@v7
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          script: |
            const prNumber = context.payload.pull_request.number;
            const prTitle = context.payload.pull_request.title;
            const prAuthor = context.payload.pull_request.user.login;

            // Check if the PR comes from Dependabot
            if (prAuthor !== "dependabot[bot]") {
              console.log("Not a Dependabot PR. Skipping...");
              return;
            }

            // Check for devDependencies update in title
            if (!prTitle.includes("deps-dev")) {
              console.log("PR does not affect devDependencies. Skipping...");
              return;
            }

            // Extract version numbers from PR title
            const oldVersionMatch = prTitle.match(/from (\d+\.\d+\.\d+)/);
            const newVersionMatch = prTitle.match(/to (\d+\.\d+\.\d+)/);

            if (!oldVersionMatch || !newVersionMatch) {
              console.log("Version numbers not found in PR title. Skipping...");
              return;
            }

            const oldVersion = oldVersionMatch[1];
            const newVersion = newVersionMatch[1];

            // Compare major versions
            const oldMajor = parseInt(oldVersion.split('.')[0]);
            const newMajor = parseInt(newVersion.split('.')[0]);

            if (oldMajor !== newMajor) {
              console.log("Major version change detected. Skipping auto-merge...");
              return;
            }

            // Approve the PR
            console.log(`Approving PR #${prNumber}...`);
            await github.rest.pulls.createReview({
              owner: context.repo.owner,
              repo: context.repo.repo,
              pull_number: prNumber,
              event: 'APPROVE',
              body: 'Auto-approved by workflow for Dependabot PRs affecting devDependencies.'
            });

      - name: Handle Merge
        id: handle_merge
        uses: actions/github-script@v7
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          script: |
            const prNumber = context.payload.pull_request.number;

            // Check if merge queue is enabled
            const branchProtection = await github.rest.repos.getBranchProtection({
              owner: context.repo.owner,
              repo: context.repo.repo,
              branch: 'main'
            });

            const mergeQueueEnabled = branchProtection.data.required_pull_request_reviews && branchProtection.data.required_pull_request_reviews.dismiss_stale_reviews;

            if (mergeQueueEnabled) {
              console.log(`Adding PR #${prNumber} to the merge queue...`);
              await github.rest.pulls.merge({
                owner: context.repo.owner,
                repo: context.repo.repo,
                pull_number: prNumber,
                merge_method: 'merge'
              });
            } else {
              console.log("Merge queue not enabled. Enabling auto-merge instead.");
              await github.rest.pulls.merge({
                owner: context.repo.owner,
                repo: context.repo.repo,
                pull_number: prNumber,
                merge_method: 'squash'
              });
              await github.rest.pulls.updateBranch({
                owner: context.repo.owner,
                repo: context.repo.repo,
                pull_number: prNumber,
                expected_head_sha: context.payload.pull_request.head.sha
              });
            }
